https://github.com/ajithkvp/CSC510-SEFall23-ProjectGroup56,,51
Item,Assessment,Evidence
Video,1,Video does not convey what the schedule is
"Workload is spread over the whole team (one team member is often Xtimes more productive than the others...but nevertheless, here is a track record that everyone is contributing a lot)",1,Commits are from only few of the teammates and not all; frequency of commits by other teammates is less.
Number of commits,2,"Over 150+ commits but only in September and October, spread over 17 teammates"
Number of commits: by different people,1,Commits count are ranging between 1 to 75. Few of the teammates have significantly low commits count
Issues reports: there are many,1,18 issues have been raised
Issues are being closed,1,6 open issues
DOI badge: exists,2,"Badges exist, but not all are completely fucntional"
"Docs: doco generated, format not ugly",3,Clear and concise documentation which is self-explanatory
Docs: what: point descriptions of each class/function (in isolation),3,Decently documented
"Docs: how: for common use cases X,Y,Z mini-tutorials showing worked examples on how to do X,Y,Z",2,"No mini tutorials, but explanation has been done with images."
"Docs: why: docs tell a story, motivate the whole thing, deliver a punchline that makes you want to rush out and use the thing",2,"Not efficient enough to make me want to use it, but a decent one."
"Docs: short video, animated, hosted on your repo. That convinces people why they want to work on your code.",1,The video hosted on the repo is a critic of the project; though the video consists of explanations related to bug fixes and enhancements
Use of version control tools,2,
Use of style checkers,3,Usage of Prettier for JavaScript and Python's PyLint
Use of code formatters.,3,
Use of syntax checkers.,3,Well done
Use of code coverage,2,74% code coverage
Other automated analysis tools,2,
Test cases exist,2,"Decent count of test cases, not all cases are covered."
Test cases are routinely executed,0,Not executed
The files CONTRIBUTING.md lists coding standards and lots of tips on how to extend the system without screwing things up,3,Detailed explanation has been represented; and has all useful information.
Issues are discussed before they are closed,1,"No discussions seen, just explanations by self"
Chat channel: exists,1,No chat channel exists
Test cases: a large proportion of the issues related to handling failing cases,1,Not much
Evidence that the whole team is using the same tools: everyone can get to all tools and files,2,
"Evidence that the whole team is using the same tools (e.g. config files in the repo, updated by lots of different people)",1,Seen only in README.md file
"Evidence that the whole team is using the same tools (e.g. tutor can ask anyone to share screen, they demonstrate the system running on their computer)",2,
Evidence that the members of the team are working across multiple places in the code base,2,Contributors have on different aspects of the tools and updating on the different code bases.
Short release cycles,1,Not frequent release
,,
"Does your website and documentation provide a clear, high-level overview of your software?",Y,"The documentation is very descriptive, having tutorials for each command"
Does your website and documentation clearly describe the type of user who should use your software?,Y,Software usage has been clearly mentioned.
Do you publish case studies to show how your software has been used by yourself and others?,N,
Is the name of your project/software unique?,N,Not unique; the title is not self-explanatory.
Is your project/software name free from trademark violations?,Y,
Is your software available as a package that can be deployed without building it?,N,
Is your software available for free?,Y,
"Is your source code publicly available to download, either as a downloadable bundle or via access to a source code repository?",Y,
"Is your software hosted in an established, third-party repository likeGitHub (https://github.com)",Y,https://github.com/elric97/feature-hunt
Is your documentation clearly available on your website or within your software?,Y,
"Does your documentation include a ""quick start"" guide, that provides a short overview of how to use your software with some basic examples of use?",N,No quick start guide; The installation procedure is little complicated.
"If you provide more extensive documentation, does this provide clear, step-by-step instructions on how to deploy and use your software?",Y,Available in README.md
"Do you provide a comprehensive guide to all your software’s commands, functions and options?",N,
Do you provide troubleshooting information that describes the symptoms and step-by-step solutions for problems and error messages?,N,Not avaliable anywhere
"If your software can be used as a library, package or service by other software, do you provide comprehensive API documentation?",N,
Do you store your documentation under revision control with your source code?,N,
"Do you publish your release history e.g. release data, version numbers, key features of each release etc. on your web site or in your documentation?",N,
Does your software describe how a user can get help with using your software?,Y,
"Does your website and documentation describe what support, if any, you provide to users and developers?",N,"Information is only about installation, for developers. No info related to user's instuctions."
Does your project have an e-mail address or forum that is solely for supporting users?,N,
Are e-mails to your support e-mail address received by more than one person?,N,
Does your project have a ticketing system to manage bug reports and feature requests?,Y,Git's In-built representation of bug reports and management.
"Is your project's ticketing system publicly visible to your users, so they can view bug reports and feature requests?",Y,Bugs are logged as issues on the Github repository
Is your software’s architecture and design modular?,Y,"Yes, they have created a modular code"
Does your software use an accepted coding standard or convention?,Y,
"Does your software allow data to be imported and exported using open data formats? e.g. GIF, SVG, HTML, XML, tar, zip, CSV, JSON, NetCDF, or domain specific ones",Y,".tar, .zip and .csv"
"Does your software allow communications using open communications protocols? e.g. HTTP, FTP, XMPP, SOAP over HTTP,  or domain-specific ones",Y,"no expilicit info, but the HTTP to HTTP connections do work."
"Is your software cross-platform compatible? e.g. does it run under two or more of Windows, Unix/Linux and Mac OS X, or can be used from within two or more of Internet Explorer, Chrome, Firefox and Safari?",Y,
Does your software adhere to appropriate accessibility conventions or standards?,Y,
Does your documentation adhere to appropriate accessibility conventions or standards?,Y,
Is your source code stored in a repository under revision control?,Y,
Is each source code release a snapshot of the repository?,Y,
Are releases tagged in the repository?,Y,
"Is there a branch of the repository that is always stable? (i.e. tests always pass, code always builds successfully)",Y,the main branch 
Do you back-up your repository?,N,
Do you provide publicly-available instructions for building your software from the source code?,Y,
"Can you build, or package, your software using an automated tool?",N,
Do you provide publicly-available instructions for deploying your software?,Y,
Does your documentation list all third-party dependencies?,Y,
Does your documentation list the version number for all third-party dependencies?,N,Mentions only tools and not the versions
"Does your software list the web address, and licences for all third-party dependencies and say whether the dependencies are mandatory or optional?",N,
Can you download dependencies using a dependency management tool or package manager?,N,
Do you have tests that can be run after your software has been built or deployed to show whether the build or deployment has been successful?,N,No support to check build success.
Do you have an automated test suite for your software?,N,
Do you have a framework to periodically (e.g. nightly) run your tests on the latest version of the source code?,N,Found no such infrastructure
"Do you use continuous integration, automatically running tests whenever changes are made to your source code?",N,
Are your test results publicly visible,N,
Are all manually-run tests documented?,N,
"Does your project have resources (e.g. blog, Twitter, RSS feed, Facebook page, wiki, mailing list) that are regularly updated with information about your software?",N,Did not find any other resources other than github.
Does your website state how many projects and users are associated with your project?,N,Does not mention users
Do you provide success stories on your website?,N,
Do you list your important partners and collaborators on your website?,Y,List can be seen on readme and contributor sections.
Do you list your project's publications on your website or link to a resource where these are available?,N,
Do you list third-party publications that refer to your software on your website or link to a resource where these are available?,N,
Can users subscribe to notifications to changes to your source code repository?,Y,
Not executed,N,It has been executed; screenshots provided as evidence.
"Do you accept contributions (e.g. bug fixes, enhancements, documentation updates, tutorials) from people who are not part of your project?",Y,CONTRIBUTIONS.md - https://github.com/elric97/feature-hunt/blob/main/CONTRIBUTING.md
Do you have a contributions policy?,Y,CONTRIBUTIONS.md - https://github.com/elric97/feature-hunt/blob/main/CONTRIBUTING.md
Is your contributions' policy publicly available?,Y,CONTRIBUTIONS.md - https://github.com/elric97/feature-hunt/blob/main/CONTRIBUTING.md
Do contributors keep the copyright/IP of their contributions?,N,
Does your website and documentation clearly state the copyright owners of your software and documentation?,N,
Does each of your source code files include a copyright statement?,N,
Does your website and documentation clearly state the licence of your software?,Y,
Is your software released under an open source licence?,Y,
Is your software released under an OSI-approved open-source licence?,Y,
Does each of your source code files include a licence header?,N,
Do you have a recommended citation for your software?,N,
"Does your website or documentation include a project roadmap (a list of project and development milestones for the next 3, 6 and 12 months)?",Y,There's a future scope page.
"Does your website or documentation describe how your project is funded, and the period over which funding is guaranteed?",N,
"Do you make timely announcements of the deprecation of components, APIs, etc.?",N,